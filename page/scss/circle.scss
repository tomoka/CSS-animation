//変数の定義
@import "../../lib/taylor";

$r: 300; //円の半径
$point: 30; //いくつ点を用意するか
//$point2: 50; //いくつ点を用意するか
//$singleAngle:  (360/$point)*(pi()/180) ;
$singleAngle:  (12 * pi())/180 ;
$keyFrameLength: 60;

@mixin translate($x,$y) {
  -webkit-transform:translate($x, $y);
  -ms-transform:translate($x, $y);
  -moz-transform:translate($x, $y);
  -o-transform:translate($x, $y);
  transform:translate($x, $y);
}
@mixin animation-delay($d) {
  -webkit-animation-delay : $d ;
  -ms-animation-delay     : $d ;
  -moz-animation-delay    : $d ;
  -o-animation-delay      : $d ;
  animation-delay         : $d ;
}

ul {
  position: relative;
  width: 300px;
  height: 300px;
  background-color: none;
  top: 300px;
  left: 300px;
  //border: solid 1px #cccccc;
}

@for $t from 0 through $point {    
  li:nth-child(#{$t}) { 
      top: $r * cos($singleAngle * $t) + px;
      left: $r * sin($singleAngle * $t) + px;
      position: absolute;
      width: 30px;
      height: 30px;
      border-radius: 50%;
      list-style: none;
      background-color: blue;
      opacity: 0.5;
      //border: solid 1px #cccccc;
      animation: 
        colorAnimation 8s linear infinite,
        rotateAnimation2 20s linear infinite
        ;
      $durationDelay: ( 20 / $point ) * $t + s;
      //@include animation-delay($durationDelay);
    }
  }

@keyframes colorAnimation {
  @for $i from 0 through $point {
    #{(100 / $keyFrameLength) * $i + "%"} {
      $h: (360 / $keyFrameLength) * $i;
      $color: hsl($h, 100, 68);
      background-color: $color;
    }
  }
}

@keyframes rotateAnimation {
 @for $k from 0 through $point {
   $angle : $singleAngle * 10 * $k;
   //$angle : 12 * (pi()/180) * 10 * $k;
       $rc : 100;
       $rm : 9;
       $rd : 1.5;
        #{(100 / $point) * $k + "%"} {
          $x:  ( $rc - $rm ) * cos( $angle ) + $rd * cos(( $rc - $rm ) / $rm * $angle ) + px;
          $y:  ( $rc - $rm ) * sin( $angle ) - $rd * sin(( $rc - $rm ) / $rm * $angle ) + px;
          @include translate($x, $y);
          }
      }
   }

@keyframes rotateAnimation2 {
  @for $k from 0 through $point {
   $angle : $singleAngle * 1 * $k;
    #{(100 / $point) * $k + "%"} {
      $x: $r * cos( $angle ) + px;
      $y: $r * sin( $angle ) + px;
      @include translate($x, $y);
    }
  }
}

