//変数の定義
$r: 300; //円の半径
$point: 30; //いくつ点を用意するか
///$point2: 50; //いくつ点を用意するか
$singleAngle:  (360 / $point) * (pi() / 180) ;
$angle: (360 / $point) * (pi() / 180);
$keyFrameLength: 60;

@mixin translate($x,$y) {
  -webkit-transform:translate($x, $y);
  -ms-transform:translate($x, $y);
  -moz-transform:translate($x, $y);
  -o-transform:translate($x, $y);
  transform:translate($x, $y);
}
@mixin animation-delay($d) {
  -webkit-animation-delay : $d ;
  -ms-animation-delay     : $d ;
  -moz-animation-delay    : $d ;
  -o-animation-delay      : $d ;
  animation-delay         : $d ;
}


body {
}
ul {
  position: relative;
  width: 600px;
  height: 600px;
  background-color: none;
  top: 400px;
  left: 50%;
  //border: solid 1px #cccccc;
}

@for $t from 0 through $point {    
  li:nth-child(#{$t}) { 
      //top: $r * cos($singleRadian * $t) + px;
      //left: $r * sin($singleRadian * $t) + px;
      position: absolute;
      width: 1em;
      height: 1em;
      border-radius: 50%;
      list-style: none;
      animation: 
        colorAnimation 8s linear infinite,
        rotateAnimation 10s linear infinite;
      $durationDelay: ( 4 / $point ) * $t + s;
      @include animation-delay($durationDelay);
    }
  }

@keyframes colorAnimation {
  @for $i from 0 through $point {
    #{(100 / $keyFrameLength) * $i + "%"} {
      $h: (360 / $keyFrameLength) * $i;
      $color: hsl($h, 100, 68);
      background-color: $color;
    }
  }
}

 @for $j from 0 through $point {
   @keyframes rotateAnimation {
     @for $k from 0 through $point {
       $rc : $r;
       $rm : 30;
       $rd : 50;
        #{(100 / $point) * $k + "%"} {
          $x:  ( $rc - $rm ) * cos( $singleAngle * $k ) + $rd * cos((( $rc - $rm ) / $rm) * ($singleAngle * $k) ) + px;
          $y:  ( $rc - $rm ) * sin( $singleAngle * $k ) - $rd * sin((( $rc - $rm ) / $rm) * ($singleAngle * $k) ) + px;
          @include translate($x, $y);
          }
        }
      }
    }

